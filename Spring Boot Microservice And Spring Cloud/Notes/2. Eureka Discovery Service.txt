Eureka Discovery Service
--

-Eureka helps find microservices each other
-If we have a users microsevice running on localhost:8080 and our client want to use that service, we can simply hardcode that url and domain
on client level which will work fine
-But what if we start users microservice instance on different ports like 8081 and 8082. The client application is only configured with 8080
and it will continue to use the single microservice only
-Eureka helps registering all microservies with different instances on it.
-The Load balancer talks with eureka to return all the instances running of a single microservice and then it will balance the load among 
microservice as needed.


-Create a new spring boot project (Discovery Server) with netflix eureka server in pom.xml
-Add the @EnableEurekaServer in the main application class
-Configure properties in app.properties
    *server.port=8010
    *spring.application.name=discovery-service
    *eureka.client.fetch-registry=false
    *eureka.client.register-with-eureka=false
    *eureka.client.service-url.defaultZone=http://localhost:8010/eureka
    *eureka.instance.prefer-ip-address=true



-Create a new spring boot project (User Service and Account Service) with netflix eureka discovery client dependency in pom.xml
-Add the @EnableDiscoveryClient in the main application class
-Configure properties in app.properties
    *server.port={port}
    *spring.application.name={relevant-service-name}
    *eureka.client.service-url.defaultZone=http://localhost:8010/eureka



