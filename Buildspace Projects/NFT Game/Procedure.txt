Web 3.0 Training (Project 5)
---

Build Web 3.0 App Using Ethereum & Solidity
  .url: https://buildspace.so/create-turn-based-nft-game
  
Gaming and crypto, a quick intro.

It's worth briefly talking about why gaming + crypto is so interesting. I feel like when most people talk about this topic they throw out 
really big numbers like, "Blah game did $1.2 billion in revenue this quarter" or something like that. But, it's more than that! It helps to 
explain why this stuff is cool.

For example, Axie Infinity is an NFT-based game that has done $2.6 billion dollars in NFT trades so far. But... what does that even mean?
Why are people losing their minds over things like this?

A quick example w/ Nintendo (Gaming Company)
Let's say you're Nintendo and you made Super Mario Bros. Mario is now your IP. You're the creator. No one is allowed to create more games 
with Mario except you. You also want to control who makes % from your characters/universe.
Let's imagine a world instead, where we bring NFTs into the mix.
Let's say Nintendo comes out and says "Hey players! Here are 1,000,000 Mario NFTs. Go buy one for $10. We (Nintendo) are going to be making 
games that require players to own the Mario NFT in their crypto wallet to play them."

For example, players would be able to take their Mario NFT to play as Mario in Super Smash Bros, then maybe they could take their Mario NFT 
to play Super Mario Galaxy, etc.

The most important thing here is that the Mario NFTs smart contract code would have something special implemented by Nintendo around 
royalties.
For example, players would be able to sell their Mario NFTs on a marketplace.
In this case, Nintendo could say: "every time this NFT sells, we take 10% of whatever it sells for" and they can code that into the NFT 
contract itself. That means the original creators (Nintendo) can always get in on the profits in a variety of ways that don't require 
trusting anyone other than the blockchain.

That means as Mario rises in popularity, the NFT needed to play Mario games also rise in value. Nintendo could sell more Mario NFTs as well 
once the original 1,000,000 are gone. Up to them!
Coolest part? Players retain a ton of the value. Players can always hold/sell the original NFTs that would increase in value as the 
games/characters get more popular. It incentivizes players to help make the game huge as well. Everyone wins :).
This may sounds crazy but this is pretty much exactly how Axie Infinity works. It's doing billions of dollars in revenue every year. You 
can buy some Axie NFTs here and start playing. As the Axie universe grows more popular, the NFTs increase in value as well!

An issue: inflation
You'll notice the Axies cost like $300+!!! That's insane and a major turn off for new players. You need three of them to even start playing, 
so, thats $1K right there.
This is basically caused by inflation in the marketplace. Only a certain # of Axies are being created today but the player base is growing 
far faster. The result? Crazy prices. There are solutions here that are being explored, but this is definitely a concern when it comes to 
NFT games. From the official Axie whitepaper:

Building open games
Going with another benefit. Easily making games and universes that anyone else can build on via NFTs.
Imagine trying to get a deal with Nintendo to make a game with Mario in it. It would be near impossible unless you were a massive gaming 
company!! Nintendo would want to do a ton of paperwork detailing how royalties would work.
But, a cool aspect of NFT games is that anyone would be able to build on top of the Mario NFTs and the original creators can retain value.

For example, random game devs would be able to make games that required players to connect their wallet and verify they have the Mario NFT. 
If they did, then the game would start and the player's game would be able to access various Mario assets! But, what's in it for Nintendo? 
Well, as these games made by random devs get more popular it means the original Mario NFTs would rise in value which is good for Nintendo. 
Let's say you think all this stuff around "selling the NFT" is nonsense.

Well, Nintendo could even code the Mario NFT to say, "every time the Mario NFT is used in a new game, ask player to pay $10 from their 
Ethereum wallet."
$5 would go right to Nintendo's wallet. $5 would go right to the dev's wallet. The possibilities are literally endless because we can program 
the royalty system to work however we want.
---------------


Create Ethereum Local Env running and do basic setup as discussed in previous projects

The goal of our game will be to destroy a boss. Let's say that boss has 1,000,000 HP. What players do is when they start the game, 
they mint a character NFT that has a certain amount of Attack Damage and HP. Players can order their character NFT to attack the boss 
and deal damage to it. Kinda like a Pokemon!

The goal? Players need to work together to attack the boss and bring its HP down to 0. The catch? Every time a player hit the boss, the 
boss hits the player back! If the NFT's HP goes below 0, the player's NFT dies and they can't hit the boss anymore. Players can only have 
one character NFT in their wallet. Once the character's NFT dies, it's game over. That means many players need to join forces to attack the 
boss and kill it.

---

We initialize characters on the contract when deploying it.
Then when users mint the character, we assign every character with unique NFT id even though the character chosen is the same.
And save the data in state variables in the mapping to who minted which character.

The function tokenURI is something we get for free from ERC721 since we inherited from it. 
tokenUri is a function on every NFT that returns the actual data attached to the NFT.

The tokenURI actually has a specific format! It's actually expecting the NFT data in JSON.
We store the character information in json format, encode in base64, form a url to be opened in browser and returns the result